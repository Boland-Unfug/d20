ok so what it looks like they did is the OOD approach, where they define things like die, and their states, before organizing in a tree
probably the best way for me to integrate with this would be to add data to the objects then and have a seperate process for it in the dice file
maybe add a class like roller or parser but for the new math
^ for auto max damage, v for auto min damage (cleave)

Made huge progress today integrating probabilities into the expression file, currently on Set, and I beleive thats the last of them.
For set, it seems I have to add the die operators such as exploding die to the model.

bro so fukin much progress
its all internal to my knowledge, I just need to test it pretty much, and if extra die operators don't work then do that too
fix multiplication operation

Real decision time: do I have overloads or a general solution function? overloads may make things more intuitive... or less
for now I will simply fix the problem

numpy has a convolve function so def use that
also the three funcitons I effectively need are
1.) instantiate a dice probability
2.) put together die probabilities (xd6, 1d6 + 1d10)
3.) apply operations such as +4
4.) will have to ensure probabilities sum up to 1